/*
   C-programs for RSA key generation, encryption, ecryption, license creation
   and license extraction.
   Coded by Ilan A. Smith.

   Before using license creation or extraction functions, initialize the
   required encryption level by calling rsa_license_init().

   Copyright (C) 2005, Ilan A. Smith,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

   References:
   C. E. Leiserson, C. Stein, R. Rivest and T. H. Cormen,
     "Introduction to Algorithms", second edition
     Chapter 31: Number-Theoretic Algorithms
   M. Joye, P. Paillier and S. Vaudenay
     "Efficient Generation of Prime Numbers"
   A. Daly and W. Marnane
     "Efficient Architectures for implementing Montgomery Modular
      Multiplication and RSA Modular Exponentiation on Reconfigurable Logic"
   H. Haramoto and M. Matsumoto
     "Efficient Jump Ahead for F2-linear Random Number Generators"

   Any feedback is very welcome.
   email: lunnys@gmail.com
*/

